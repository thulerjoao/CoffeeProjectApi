// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Type {
  id   String @id @default(uuid())
  name String @unique

  product Product[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("type")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String

  cart   Cart?   @relation(fields: [cartId], references: [id])
  cartId String? @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user")
}

model Cart {
  id         String @id @default(uuid())
  totalValue Float?

  user     User?
  products ProductCart[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("cart")
}

model Product {
  id          String  @id @default(uuid())
  image       String?
  title       String  @unique
  description String
  price       Float

  cart ProductCart[]

  type   Type?   @relation(fields: [typeId], references: [id])
  typeId String? @unique @map("type_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("product")
}

model ProductCart {
  id     String @id @default(uuid())
  size   Int
  amount Int

  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String

  product   Product @relation(fields: [productId], references: [id])
  productId String

  // @@unique([cartId, productId]) // => metodo n repitir produtos
  @@map("product_cart")
}
